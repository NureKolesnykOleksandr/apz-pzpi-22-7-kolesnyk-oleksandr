Міністерство освіти і науки України
Харківський національний університет радіоелектроніки





Кафедра «Програмної інженерії»




Дисципліна «Архітектура програмного забезпечення» 
Лабораторна робота №4





Виконав:
ст. гр. ПЗПІ-22-7
Колесник О.А	Прийняв:
 ст. викл.
Сокорчук І.П



Харків – 2025 
1 ІСТОРІЯ ЗМІН
№	Дата 	Версія	Опис змін	Автор
1	18.05.25	0.1	Було створено розділ «Завдання».	Колесник Олександр
2	18.05.25	0.1	Було створено розділ «Опис виконаної роботи».	Колесник Олександр
3	18.05.25	0.1	Було створено розділ «Висновки з роботи»	Колесник Олександр
4	19.05.25	0.2	Було створено розділ «Додаток А»	Колесник Олександр
5	19.05.25	0.2	Було створено розділ «Додаток Б»	Колесник Олександр
6	19.05.25	0. 2	Було створено розділ «Додаток В»	Колесник Олександр

2 ЗАВДАННЯ
Метою нашого Android-додатка є створення простої та зручної системи для автентифікації користувачів та перегляду історії медичних показників. Додаток дозволятиме користувачам увійти в систему через безпечний REST API, після чого відображатиме список останніх показників (пульс, рівень кисню, температура тощо) у вигляді зрозумілих таблиць. Ми реаліз	уємо мінімалістичний інтерфейс з основним функціоналом: екран входу з валідацією даних та екран історії. Для забезпечення стабільності передбачено обробку помилок мережі, локальне кешування даних для офлайн-роботи та захист передачі даних через HTTP.
3 ОПИС ВИКОНАНОЇ РОБОТИ
	Мобільний застосунок побудовано за спрощеною одноактивітійною архітектурою з використанням Jetpack Compose. Усе UI-представлення реалізоване як набір Composable-функцій, кожен з яких відповідає окремому функціональному розділу: екран входу з валідацією облікових даних
Для взаємодії з серверною частиною використовуються бібліотека okhttp3 для обміну даними через REST API. Всі HTTP-запити  реалізовані як асинхронні операції. Локальне збереження сесійних даних здійснюється через SharedPreferences для зберігання ідентифікатора користувача після успішної автентифікації.
Для забезпечення стабільності роботи реалізовано базову обробку помилок мережі та захист передачі даних через HTTP-протокол при взаємодії з серверним API.
4 ВИСНОВКИ З РОБОТИ
Під час виконання лабораторної роботи було розроблено Android-додаток для автентифікації користувачів та візуалізації медичних показників, який демонструє ефективне використання сучасних підходів у розробці програмного забезпечення. Застосування Jetpack Compose дозволило створити інтуїтивно зрозумілий інтерфейс з модульною структурою, а використання REST API через OkHttp3 забезпечило стабільну взаємодію з сервером. Додаток успішно інтегрує локальне зберігання даних (SharedPreferences) та обробку помилок, що робить його придатним для використання в умовах нестабільного інтернет-з’єднання. Отримані результати підтверджують важливість архітектурних патернів для створення масштабованих, безпечних та ефективних рішень, особливо в галузі медичних додатків. Подальший розвиток проєкту може включати вдосконалення UI/UX, розширення функціоналу аналітики даних та інтеграцію додаткових методів шифрування.

 
 
ДОДАТОК А
Посилання на відео та хронологічний опис
https://youtu.be/1v2cRTYZx_E
00:00 Початок 
00:24 Login 
00:55 Device overview 
02:40 Updating information through swagger
 
ДОДАТОК Б
Графічні матеріали
 
Рисунок Б.1 - UML діаграма прецедентів
 
Рисунок Б.2 - UML діаграма розгортання
 
Рисунок Б.3 - UML діаграма компонентів
 
Рисунок Б.4 - ER діаграма даних 
ДОДАТОК В
Програмний код

В.1 Математична обробка прикладних даних
GitHub репозиторій: https://github.com/NureKolesnykOleksandr/apz-pzpi-22-7-kolesnyk-oleksandr/blob/main/Lab4/pzpi-22-7-kolesnyk-oleksandr-lab4/MobileApllication/app/src/main/java/com/example/mobileapllication/MainActivity.kt.
1 Column(modifier = Modifier.fillMaxSize()) {
2                         Box(
3                             modifier = Modifier
4                                 .fillMaxWidth()
5                                 .height(64.dp)
6                                 .background(Color(0xFF4CAF50))
7                        ) {
8                            Text(
9                                text = "MedMon",
10                                color = Color.White,                                style = TextStyle(
11                                    fontSize = 20.sp,
12                                    fontWeight = FontWeight.Bold
13                                ),
14                                modifier = Modifier.align(Alignment.Center)
15                            )
16                        }
17                        if (userId == 0) {
18                            LoginScreen(
19                                onLoginClick = { login, password ->
20                                    isLoading = true
21                                    CoroutineScope(Dispatchers.Main).launch {
22                                        val loginService = LoginService()
23                                        val loginDto = LoginDto()
24                                        loginDto.email = login
25                                        loginDto.password = password
26                                        loginService.loginAsync(loginDto)
27                                            .thenAccept { result ->
28                                                if (result != null) {
29                                                    println("Успешная авторизация: userId = ${result.userId}")
30                                                    userId = result.userId
31                                                } else {
32                                                    println("Ошибка авторизации: результат null")
33                                                }
34                                                isLoading = false
35                                            }
36                                            .exceptionally { error ->
37                                                println("Ошибка при авторизации: ${error.message}")
38                                                error.printStackTrace()
39                                                isLoading = false
40                                                null
                                            }
41                                    }
42                                },
43                                isLoading = isLoading
                            )
44                        } else {
45                            DeviceScreen(
46                                userId = userId
47                            )
48                        }
49                    }

